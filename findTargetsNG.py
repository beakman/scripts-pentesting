import requesocks as requests
import argparse
import urlparse
import re
from multiprocessing import Pool

# LOOK FOR POSSIBLE TARGETS

parser = argparse.ArgumentParser()
parser.add_argument("--file", help="URLs file")
parser.add_argument("--proxy", help="http proxy (i.e: socks5://127.0.0.1:9050)", default="socks5://127.0.0.1:9050")

args = parser.parse_args()

session = requests.session()
session.proxies = {
    #
    # PROXY CONFIG
    "http": args.proxy,
    "https": args.proxy
}

# 
PARKED_FOOTPRINTS = [
    'domain available', 
    'renewal', 
    'parked', 
    'is for sale', 
    'This domain', 
    'domain owner', 
    'This page is provided', 
    'This page has been suspended',
    'has registered',
    'DNS ERROR!',
    'coming soon',
    'If you are the owner'
    ]
WP_DIR = [
        '/wp-content/uploads/',
        '/wp-content/plugins/',
        '/wp-content/',
        '/wp-includes/'
        ]
ADMIN_DIR = [
    '/admin/',
    '/administrator/',
    '/login/'
    ]
COMMON_DIR = [
        '/img/',
        '/image/',
        '/images/',
        '/css/',
        '/js/',
        '/assets/',
        '/assets/img',
        '/assets/image',
        '/assets/images',
        '/assets/css',
        '/assets/js',
    ]

def is_wordpress(url):
    r = session.get(url+'/wp-login.php')
    return r.status_code == 200

def wp_version(url):
    try:
        r = session.get(url + '/readme.html')
        match = re.search(
            r'Version ([0-9]+\.[0-9]+\.?[0-9]*)',
            r.text.encode('utf-8').strip()
        )
        if match:
            print '\033[92m[+] WordPress ' + match.group(1) + ': ' + url + '\033[0m'
            return match.group(1)
    except requests.exceptions.HTTPError:
        print '[-] Can\'t obtain WP version. Sure it\'s WordPress?'
        return None

def wp_directories(url):        
    for directory in WP_DIR:
        try:
            r = session.get(url+directory)
            if "Index of" in r.text:
                print '\033[93m[!] Directory listing enabled in: ' + url + directory + '\033[0m'
                if directory != "/wp-includes/" and ".php" in r.text:
                    print '\033[91m[!] Suspect PHP file in: ' + url + directory + '\033[0m'
        except Exception as e:
            pass

def not_parked(source):
    if any(footprint.lower() in source.lower() for footprint in PARKED_FOOTPRINTS):
        return False
    return True

def has_admin(url):
    for directory in ADMIN_DIR:
        try:
            r = session.get(url+directory)
            if r.status_code == 200:
                print '\033[92m[+] Found admin in: ' + url + directory + '\033[0m'
        except Exception as e:
            pass

def find_php(source, url):
    if ".php" in source:
        print '\033[92m[+] Found PHP script in: ' + url + '\033[0m'

def quick_pwn(url):
    for directory in COMMON_DIR:
        try:
            r = session.get(url+directory)
            if ".php" in r.text:
                print '\033[91m[!] Suspect PHP file in: ' + url + directory + '\033[0m'
        except Exception as e:
            pass

def process_url(url):
    url = url.rstrip()
    if not urlparse.urlparse(url).scheme:
        url = "http://" + url
    try:
        print '[*] Checking ' + url
        r = session.get(url)            
        if not_parked(r.text):
            if is_wordpress(url):
                print '\033[94m[+] Found WordPress: ' + url + '\033[0m'
                wp_version(url)
                wp_directories(url)       
            else:
                print '\033[94m[+] Found something: ' + url + '\033[0m'
                has_admin(url)
                find_php(r.text, url)
                quick_pwn(url)

    except requests.ConnectionError:
        print '[-] Domain not resolves: ' + url
    except requests.exceptions.TooManyRedirects:
        print '[-] Error Too many redirects: ' + url
    except requests.packages.urllib3.exceptions.LocationParseError:
        print '[-] Location parse error: ' + url
    except Exception as e:
        print '[-] Unknown exception: ' + url

if __name__ == "__main__":
    print '[*] Open: ' + args.file
    r = session.get("http://ipecho.net/plain")
    print '[*] Going through: ' + r.text
    pool = Pool(5)
    with open(args.file, 'r') as urls:
        # chunk the work into batches of 4 lines at a time
        results = pool.map(process_url, urls, 5)

    print results
    
        