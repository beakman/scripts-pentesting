#!/usr/bin/python
# -*- coding: utf-8 -*-
#

import re
import sys
import requesocks as requests
import urlparse
import argparse
import click
from itertools import product
from string import ascii_lowercase, ascii_letters, digits

session = requests.session()
session.proxies = {
    #
    # PROXY CONFIG
    "http": "socks5://127.0.0.1:9050",
    "https": "socks5://127.0.0.1:9050"
}

headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:32.0) Gecko/20100101 Firefox/32.0',}

parser = argparse.ArgumentParser()
parser.add_argument("--url", help="URL to be checked")
parser.add_argument("--threads", help="No. of threads to be used", default=1)
parser.add_argument("--size", help="Size of the generated words. i.e: (2) 'ab', 'ac'... ", default=2)
parser.add_argument("--ext", help="File extension. i.e: 'ab.php', 'ac.php'... ", default='/')
parser.add_argument("--set", help="Set of characters to be used: digits | letters | lowercase ", default='lowercase')
parser.add_argument("--dir", help="Directory list (i.e: wp-directories.txt)")
parser.add_argument("--shells", help="Common backdoors (i.e: shells.txt)")

args = parser.parse_args()

shells_dict = ''

if args.url:
    print "[*] Checking: " + args.url
    URL = args.url

if args.threads:
    THREADS_NO = args.threads


if args.set == 'digits':
    collection = digits
elif args.set == 'letters':
    collection = ascii_letters + digits
elif args.set == 'lowercase':
    collection = ascii_lowercase + digits

if args.size:
    WORD_SIZE = int(args.size)
    dictionary = [''.join(i) for i in product(collection, repeat = WORD_SIZE)]

if args.ext == '/':
    extension = args.ext
else:
    extension = '.' + args.ext

if args.dir:
    directory_list = args.dir

if args.shells:
    shells_dict = args.shells

# Proxy test info message:
try:
    response = session.get("http://httpbin.org/ip")
    print "[*] Routed through TOR: " + re.findall(r'[\d.-]+', response.text)[0]
except:
    print "[-] Proxy error!"
    exit()


def show_item(item):
    if item is not None:
        return '- current: /%s%s' % (item, extension)

if shells_dict:
    with open(shells_dict, 'r') as shells:
        for shell in shells:
            shell_list += shell

            with click.progressbar(shells, length=len(shells), label='[*] Discovering ', item_show_func=show_item) as words:
                for word in words:
                    if directory_list:
                        with open(directory_list, 'r') as directories:
                            for directory in directories:
                                url = URL + '/' + directory + '/' + word
                                try:
                                    resp = session.get(url=url, headers=headers)
                                    if resp.status_code == 200:
                                        print '\n\033[34m[+] Found ' + url + '\033[0m'
                                except:
                                    pass
                    else:
                        url = URL + '/' + word
                        try:
                            resp = session.get(url=url, headers=headers)
                            if resp.status_code == 200:
                                print '\n\033[34m[+] Found ' + url + '\033[0m'
                        except:
                            pass

else:
    with click.progressbar(dictionary, length=len(dictionary), label='[*] Discovering ', item_show_func=show_item) as words:
        for word in words:
            url = URL + '/' + word + extension
            try:
                resp = session.get(url=url, headers=headers)
                if resp.status_code == 200:
                    print '\n\033[34m[+] Found ' + url + '\033[0m'
            except:
                pass
